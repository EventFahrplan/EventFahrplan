name: Deploy to Google Play Store

on:
  push:
    branches:
      - glt-2022

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '17'
      - name: Build
        run: ./gradlew assembleGlt22Release

      - name: Assemble Release Bundle
        run: |
          ./gradlew bundleGlt22
      - name: Sign Release
        uses: r0adkll/sign-android-release@v1
        # ID used to access action output
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/bundle/glt22Release
          signingKeyBase64: ${{ secrets.KEYSTORE }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        #needed because https://github.com/r0adkll/sign-android-release/issues/84
      - name: Setup build tool version variable
        shell: bash
        run: |
          BUILD_TOOL_VERSION=$(ls /usr/local/lib/android/sdk/build-tools/ | tail -n 1)
          echo "BUILD_TOOL_VERSION=$BUILD_TOOL_VERSION" >> $GITHUB_ENV
          echo Last build tool version is: $BUILD_TOOL_VERSION
      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        # ID used to access action output
        id: sign_apk
        with:
          releaseDirectory: app/build/outputs/apk/glt22/release
          signingKeyBase64: ${{ secrets.KEYSTORE }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: ${{ env.BUILD_TOOL_VERSION }}

      - name: Tag Release
        run: |
          version_name=$(grep -oP -m1 '(?:versionName\s")([^"]+)"' app/build.gradle | grep -oE "[0-9]+\.[0-9]+\.[0-9]+")
          echo "Tagging release with tag v$version_name"
          git tag v$version_name ${GITHUB_REF##*/}
          git push origin --tags

      - name: Create service_account.json
        run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json

      - name: Deploy to Production
        uses: r0adkll/upload-google-play@v1.1.3
        with:
          serviceAccountJson: service_account.json
          packageName: at.linuxtage.Eventfahrplan
          releaseFiles: ${{steps.sign_app.outputs.signedReleaseFile}}
          track: production

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          file: ${{steps.sign_apk.outputs.signedReleaseFile}}
          asset_name: GLT_app.apk
          tag: ${{ github.ref }}
          overwrite: true